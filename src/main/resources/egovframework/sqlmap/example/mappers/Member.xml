<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

	<mapper namespace="egovframework.example.member.service.impl.MemberMapper">
	 
	<select id="getListAll" resultType="hashMap" >
		SELECT /*MemberMapper*/ * 
		FROM TBL_MEMBER 
		ORDER BY CREATE_TM DESC
	</select>

	
	<select id="getList" resultType="hashMap" parameterType="egovframework.example.member.model.MemberVo">
		SELECT /*MemberMapper*/ *, 
			<![CDATA[
			(now() > START_TM) AS START_STATUS, 
			(now() < END_TM) AS END_STATUS
			]]>
		 FROM TBL_MEMBER
		WHERE 1=1 AND DLETE_KEY != 1
	    <if test="TYPE_SUB != ''">
	    	AND (TYPE_SUB = #{TYPE_SUB} OR TYPE_SUB = '0')
	    </if> 
		<if test="SEARCH_TEXT != ''">
		     <if test="SEARCH_TYPE == 'ALL'">
		    	AND (
		    		TITLE LIKE '%${SEARCH_TEXT}%' 
		    		OR  CONTENT LIKE '%${SEARCH_TEXT}%'
		    		) 
		    </if>
		    <if test="SEARCH_TYPE != 'ALL'">
	    		 AND ${SEARCH_TYPE} LIKE '%${SEARCH_TEXT}%'
	    	</if>
	    	
	    </if>	    
		ORDER BY UPDATE_TM DESC
		
		LIMIT ${LIMIT} OFFSET ${OFFSET}
	</select>
		
	<select id="getListCnt" resultType="int" parameterType="egovframework.example.member.model.MemberVo">
		SELECT /*MemberMapper*/ COUNT(*) FROM TBL_MEMBER
		WHERE 1=1 AND DLETE_KEY != 1
	    <if test="TYPE_SUB != ''">
	    	AND (TYPE_SUB = #{TYPE_SUB} OR TYPE_SUB = '0')
	    </if> 
		<if test="SEARCH_TEXT != ''">
		     <if test="SEARCH_TYPE == 'ALL'">
		    	AND (
		    		TITLE LIKE '%${SEARCH_TEXT}%' 
		    		OR  CONTENT LIKE '%${SEARCH_TEXT}%'
		    		) 
		    </if>
		    <if test="SEARCH_TYPE != 'ALL'">
	    		 AND ${SEARCH_TYPE} LIKE '%${SEARCH_TEXT}%'
	    	</if>
	    	
	    </if>	    
	</select>

	<select id="getView" resultType="egovframework.example.member.model.MemberVo" parameterType="String">
		SELECT /*MemberMapper*/ *
		FROM TBL_MEMBER 
		WHERE MEMBER_ID = #{MEMBER_ID};
	</select>
	
	<select id="getFindPw" resultType="egovframework.example.member.model.MemberVo" parameterType="egovframework.example.member.model.MemberVo">
		SELECT /*MemberMapper*/ *
		FROM TBL_MEMBER 
		WHERE MEMBER_ID = #{MEMBER_ID} AND EMAIL = #{EMAIL} 
		LIMIT 1;
	</select>
	
	<select id="getFindId" resultType="egovframework.example.member.model.MemberVo" parameterType="egovframework.example.member.model.MemberVo">
		SELECT /*MemberMapper*/ *
		FROM TBL_MEMBER 
		WHERE NAME = #{NAME} AND EMAIL = #{EMAIL} 
		LIMIT 1;
	</select>
	
	<select id="setPwdChanged" parameterType="egovframework.example.member.model.MemberVo">
		UPDATE TBL_MEMBER /*MemberMapper*/ 
		SET PASSWORD = #{PASSWORD}
		WHERE MEMBER_ID = #{MEMBER_ID}
	</select>
	
	<insert id="setInsert"	parameterType="egovframework.example.member.model.MemberVo">
		INSERT INTO /*MemberMapper*/ TBL_MEMBER (
			MEMBER_ID, 
			PASSWORD, 
			NAME, 
			NICK_NAME, 
			PET_NAME, 
			EMAIL, 
			LEVEL, 
			CREATE_TM
	
		) VALUES (
			#{MEMBER_ID}, 
			#{PASSWORD}, 
			#{NAME}, 
			#{NICK_NAME}, 
			#{PET_NAME}, 
			#{EMAIL}, 
			10, 
			now()
		) 
	</insert>

	<update id="setUpdate"	parameterType="egovframework.example.member.model.MemberVo">
		UPDATE /*MemberMapper*/ TBL_MEMBER SET 
			PASSWORD = #{PASSWORD}, 
			NAME = #{NAME}, 
			NICK_NAME = #{NICK_NAME}, 
			PET_NAME = #{PET_NAME},
			EMAIL = #{EMAIL},
 			UPDATE_TM = now()
		WHERE
			MEMBER_ID = #{MEMBER_ID} 
	</update>
	
	
	<update id="setDelete"	parameterType="egovframework.example.member.model.MemberVo">
		UPDATE /*MemberMapper*/ TBL_MEMBER SET
			DELETE_TM = now(),
			DELETE_KEY = 1
		WHERE MEMBER_ID =  #{MEMBER_ID} 
	</update>

    
</mapper>